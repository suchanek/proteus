#
#
# $Header: /data/people/suchanek/src/pdb2povf/RCS/Makefile,v 1.1 1995/09/22 16:16:30 suchanek Exp suchanek $
#
# Makefile for the pdb2pov rendering package
#
# See the docs for instructions on building this package.
#
# Copyright 1992 Eric G. Suchanek, Ph.D.
#
#
#
# $Log: Makefile,v $
# Revision 1.1  1995/09/22  16:16:30  suchanek
# Initial revision
#
# Revision 1.3  1993/11/26  10:24:17  eric
# added some new depends
#
# Revision 1.2  1993/11/26  00:26:03  eric
# additional depends for multiple cpu types
#
# Revision 1.1  1993/11/13  11:02:08  eric
# Initial revision
#
#

.precious: pdb2pov.c

DEBUG = -g
DELETE=rm -f

#
# The cflags for compiling pdb2pov under UNIX hosts
#


CC = cc
OPT = -O
CFLAGS = $(OPT) -c -DUNIX


#
# The flags for linking
#

LLIBS	= -lm

VERS=122

#
# The default make rule set
#

.SUFFIXES:
.SUFFIXES: .c .o ..h .cp .cps .fn .fns .vr .vrs .dvi .texinfo

.c.o: 
	$(CC) $(CFLAGS) -o $*.o $*.c


.texinfo.dvi:
	virtex20 &plain $*.texinfo

.texinfo.guide:
	makeinfo --amiga $*

.cp.cps:
	texindex $*.cp

.vr.vrs:
	texindex $*.vr

.fn.fns:
	texindex $*.fn

P = pdb2povf/

PROGRAMS = pdb2pov
SRC = pdb2pov.c asyncio.c util.c pdb2light.h pdb2pov_errors.h pdb2pov_usage.h pdb2ray_errors.h pdb2ray_usage.h pdb2pov.proto.h util.proto.h

HEADERS = pdb2light.h pdb2pov_errors.h pdb2pov_usage.h
HEADERS2 = pdb2light.h pdb2ray_errors.h pdb2ray_usage.h

SAMPLES = crambin.pdb crambin.pov
INCLUDE_T = atoms2.inc atoms_vdw.inc atoms_covalent.inc

PROG_DOC = pdb2pov.dvi pdb2pov.guide pdb2pov.guide pdb2pov.texinfo README.CHANGES


FILES = $(SRC) Makefile Makefile.unix Makefile.amiga $(INCLUDE_T) $(PROG_DOC)

FILES_UUE = $(PROG_DOC) $(INCLUDE_T) $(PROGRAMS)

OBJ = pdb2pov.o util.o
OBJ2 = pdb2ray.o util.o


DOC = pdb2pov.dvi Pdb2POV.dvi pdb2pov.guide pdb2pov.guide.info About.Sids \
About.Sids.info 

BABEL = 
P = 

SRC_ARCHIVE = pdb2pov_src_$(VERS).tar
BINARY_ARCHIVE = pdb2pov_sgi_$(VERS).tar
UUE_NAME = pdb2pov_$(VERS).uue

ARCHIVE = pdb2pov_$(VERS).tar

#
# Targets
#

use:
	@echo " You can make the following targets: "
	@echo "   prog -> pdb2pov"
	@echo "   tar -> source archive"
	@echo "   uue -> uuencoded SGI binaries"
	@echo "   all -> all of the above"
	@echo "   clean -> tidy up"
	@echo "   realclean -> tidy up a whole bunch"

pdb2pov: $(OBJ)
	$(CC) -o pdb2pov $(OBJ) $(LLIBS)

pdb2ray: $(OBJ2)
	$(CC) -o pdb2ray $(OBJ2) $(LLIBS)


pdb2pov.o:   $(HEADERS)
pdb2ray.o:   $(HEADERS2)


prog: $(PROGRAMS)



$(SRC_ARCHIVE): $(FILES)
	tar cof $(SRC_ARCHIVE) $(FILES)

tar: $(SRC_ARCHIVE)

$(UUE_NAME): $(FILES_UUE)
	tar cvof $(BINARY_ARCHIVE) $(FILES_UUE)
	uuencode $(BINARY_ARCHIVE) $(BINARY_ARCHIVE) > $(UUE_NAME)

uue: $(UUE_NAME)

all: prog tar uue


clean:
	@$(DELETE) $(OBJ)
	@$(DELETE) *~ 

realclean:
	@$(DELETE) $(PROGRAMS)
	rcsclean *.c *.h *.inc


IND2 = pdb2pov.cps pdb2pov.vrs pdb2pov.fns
IND = 

#pdb2pov.dvi:  pdb2pov.texinfo $(IND2)
#pdb2pov.guide:  pdb2pov.texinfo $(IND2)

doc: $(DOC)



